// engler, cs140e: your code to find the tty-usb device on your laptop.
#include <assert.h>
#include <fcntl.h>
#include <string.h>

#include <sys/stat.h>
#include "libunix.h"

#define _SVID_SOURCE
#include <dirent.h>
static const char *ttyusb_prefixes[] = {
	"ttyUSB",	// linux
    "ttyACM",   // linux
	"cu.SLAB_USB", // mac os
    //"cu.usbserial-1430", // mac os
    "cu.SLAB_USBtoUART",
    //"tty.usbserial-1430",
    // if your system uses another name, add it.
	0
};

static int filter(const struct dirent *d) {
    // scan through the prefixes, returning 1 when you find a match.
    // 0 if there is no match.
    for (int i = 0; ttyusb_prefixes[i]; i++ ){
        if (strcmp(d->d_name,ttyusb_prefixes[i])== 0) {
            return 1;
        }
    }
    return 0;
}

// find the TTY-usb device (if any) by using <scandir> to search for
// a device with a prefix given by <ttyusb_prefixes> in /dev
// returns:
//  - device name.
// error: panic's if 0 or more than 1 devices.
char *find_ttyusb(void) {
    struct dirent ** names;

    int n = scandir("/dev/", &names,filter,alphasort);
    if (n != 1){
        panic("found %d tty devices! \n", n);
    }
    char * dirp = "/dev/";
    char * fileName = names[0]-> d_name;
    char filePath [strlen(fileName)+6];
    filePath[0] = '\0';
    strcpy(filePath,dirp);
    strcat(filePath,fileName);
    
    return strdup(filePath);
}

// return the most recently mounted ttyusb (the one
// mounted last).  use the modification time 
// returned by state.
char *find_ttyusb_last(void) {
    struct dirent ** names;

    int n = scandir("/dev/", &names,filter,alphasort);
    if (n != 1){
        perror("scandir");
        exit(EXIT_FAILURE);
    }
    
    struct stat f_stats;
    int start = -1;
    time_t latestTime;

    char * name; 
    for( int i = 0; i < n; i++ ){
        char * fileName = names[i]-> d_name;
        char filePath [strlen(fileName)+6];
        strcpy(filePath,"/dev/");
        strcat(filePath,fileName);
        
        int succ = stat(filePath,&f_stats);
        if (succ ==-1){ 
            perror("stat, in find_ttyusb_last");
            exit(EXIT_FAILURE);
        }

        if(start == -1 || f_stats.st_mtime > latestTime){
            latestTime = f_stats.st_mtime;
            start = 0;
            name = fileName;
        }
    }
    if(start == -1){
        perror("fell through ttyusb_last");
        exit(EXIT_FAILURE);
    }
    return name;
}

// return the oldest mounted ttyusb (the one mounted
// "first") --- use the modification returned by
// stat()
char *find_ttyusb_first(void){ 
    struct dirent ** names;

    int n = scandir("/dev/", &names,filter,alphasort);
    if (n != 1){
        perror("scandir");
        exit(EXIT_FAILURE);
    }
    
    struct stat f_stats;
    int start = -1;
    time_t earliestTime;

    char * name; 
    for( int i = 0; i < n; i++ ){
        char * fileName = names[i]-> d_name;
        char filePath [strlen(fileName)+6];
        strcpy(filePath,"/dev/");
        strcat(filePath,fileName);
        
        int succ = stat(filePath,&f_stats);
        if (succ ==-1){ 
            perror("stat, in find_ttyusb_last");
            exit(EXIT_FAILURE);
        }

        if(start == -1 || f_stats.st_mtime < earliestTime){
            earliestTime = f_stats.st_mtime;
            start = 0;
            name = fileName;
        }
    }
    if(start == -1){
        perror("fell through ttyusb_last");
        exit(EXIT_FAILURE);
    }
    return name;

}
